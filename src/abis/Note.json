{
  "contractName": "Note",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "noteCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "notes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_desc",
          "type": "string"
        }
      ],
      "name": "createNote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_desc\",\"type\":\"string\"}],\"name\":\"createNote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"noteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"notes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/Note.sol\":\"Note\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/Note.sol\":{\"keccak256\":\"0x80b174019b1c3daf5c415971b522e8983f3a84752fb14225546a5b3c3b6a6686\",\"urls\":[\"bzz-raw://564d11c1591ba2b4d2602d4b5a5a34fd63b7052ebfcd92af03904b1d68f1454e\",\"dweb:/ipfs/QmeiEE2qCNuTZNrjWVzwfE9JAhve7zgyGKhUidFQSnXrok\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600581526020017f444e4f54450000000000000000000000000000000000000000000000000000008152506000908051906020019061004f929190610067565b50600060025534801561006157600080fd5b5061010c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a857805160ff19168380011785556100d6565b828001600101855582156100d6579182015b828111156100d55782518255916020019190600101906100ba565b5b5090506100e391906100e7565b5090565b61010991905b808211156101055760008160009055506001016100ed565b5090565b90565b6105bc8061011b6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde0314610051578063317a4c76146100d457806361c3a7e6146100f2578063e1250ab4146101d3575b600080fd5b61005961028e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561009957808201518184015260208101905061007e565b50505050905090810190601f1680156100c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100dc61032c565b6040518082815260200191505060405180910390f35b61011e6004803603602081101561010857600080fd5b8101908080359060200190929190505050610332565b60405180848152602001806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561019657808201518184015260208101905061017b565b50505050905090810190601f1680156101c35780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61028c600480360360208110156101e957600080fd5b810190808035906020019064010000000081111561020657600080fd5b82018360208201111561021857600080fd5b8035906020019184600183028401116401000000008311171561023a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610414565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b505050505081565b60025481565b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600260008154809291906001019190505550604051806060016040528060025481526020018281526020013373ffffffffffffffffffffffffffffffffffffffff168152506001600060025481526020019081526020016000206000820151816000015560208201518160010190805190602001906104949291906104e2565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061052357805160ff1916838001178555610551565b82800160010185558215610551579182015b82811115610550578251825591602001919060010190610535565b5b50905061055e9190610562565b5090565b61058491905b80821115610580576000816000905550600101610568565b5090565b9056fea265627a7a72315820761334a55b8db5d5751219e846bd0d7d821249231dde746f077b15d22fabc06e64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde0314610051578063317a4c76146100d457806361c3a7e6146100f2578063e1250ab4146101d3575b600080fd5b61005961028e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561009957808201518184015260208101905061007e565b50505050905090810190601f1680156100c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100dc61032c565b6040518082815260200191505060405180910390f35b61011e6004803603602081101561010857600080fd5b8101908080359060200190929190505050610332565b60405180848152602001806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561019657808201518184015260208101905061017b565b50505050905090810190601f1680156101c35780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61028c600480360360208110156101e957600080fd5b810190808035906020019064010000000081111561020657600080fd5b82018360208201111561021857600080fd5b8035906020019184600183028401116401000000008311171561023a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610414565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b505050505081565b60025481565b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600260008154809291906001019190505550604051806060016040528060025481526020018281526020013373ffffffffffffffffffffffffffffffffffffffff168152506001600060025481526020019081526020016000206000820151816000015560208201518160010190805190602001906104949291906104e2565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061052357805160ff1916838001178555610551565b82800160010185558215610551579182015b82811115610550578251825591602001919060010190610535565b5b50905061055e9190610562565b5090565b61058491905b80821115610580576000816000905550600101610568565b5090565b9056fea265627a7a72315820761334a55b8db5d5751219e846bd0d7d821249231dde746f077b15d22fabc06e64736f6c63430005100032",
  "sourceMap": "69:387:1:-;;;90:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;190:1;166:25;;69:387;8:9:-1;5:2;;;30:1;27;20:12;5:2;69:387:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "69:387:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;69:387:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;90:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;90:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;166:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;125:34;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;125:34:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;125:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:152;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;301:152:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;301:152:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;301:152:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;301:152:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;301:152:1;;;;;;;;;;;;;;;:::i;:::-;;90:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;166:25::-;;;;:::o;125:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;301:152::-;360:9;;:11;;;;;;;;;;;;;401:44;;;;;;;;406:9;;401:44;;;;417:5;401:44;;;;433:10;401:44;;;;;382:5;:16;388:9;;382:16;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:152;:::o;69:387::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 < 0.9.0;\r\n\r\ncontract Note {\r\n    string public name = \"DNOTE\";\r\n    mapping(uint => Todo) public notes;\r\n    uint public noteCount = 0;\r\n    struct Todo{\r\n        uint id;\r\n        string description;\r\n        address author;\r\n    }\r\n    \r\n    function createNote(string memory _desc) public {\r\n        noteCount++;\r\n        notes[noteCount] = Todo(noteCount, _desc , address(msg.sender));\r\n    }\r\n}",
  "sourcePath": "E:\\Blockchain\\Ethereum\\Starter_kit_dapp\\src\\contracts\\Note.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/Note.sol",
    "exportedSymbols": {
      "Note": [
        98
      ]
    },
    "id": 99,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 98,
        "linearizedBaseContracts": [
          98
        ],
        "name": "Note",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 61,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 98,
            "src": "90:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 59,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "90:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "444e4f5445",
              "id": 60,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "111:7:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3d4e4afd6bce6f51673da86dacbefc6eae84aed90a48ec5364e85f5916be8924",
                "typeString": "literal_string \"DNOTE\""
              },
              "value": "DNOTE"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 65,
            "name": "notes",
            "nodeType": "VariableDeclaration",
            "scope": 98,
            "src": "125:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Todo_$75_storage_$",
              "typeString": "mapping(uint256 => struct Note.Todo)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "133:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "125:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Todo_$75_storage_$",
                "typeString": "mapping(uint256 => struct Note.Todo)"
              },
              "valueType": {
                "contractScope": null,
                "id": 63,
                "name": "Todo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 75,
                "src": "141:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Todo_$75_storage_ptr",
                  "typeString": "struct Note.Todo"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 68,
            "name": "noteCount",
            "nodeType": "VariableDeclaration",
            "scope": 98,
            "src": "166:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "166:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 67,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "190:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Note.Todo",
            "id": 75,
            "members": [
              {
                "constant": false,
                "id": 70,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 75,
                "src": "220:7:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 75,
                "src": "238:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 71,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "238:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "name": "author",
                "nodeType": "VariableDeclaration",
                "scope": 75,
                "src": "267:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 73,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "267:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Todo",
            "nodeType": "StructDefinition",
            "scope": 98,
            "src": "198:91:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "349:104:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "360:11:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "noteCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "360:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "360:11:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "notes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "382:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Todo_$75_storage_$",
                          "typeString": "mapping(uint256 => struct Note.Todo storage ref)"
                        }
                      },
                      "id": 85,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "noteCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "388:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "382:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Todo_$75_storage",
                        "typeString": "struct Note.Todo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "noteCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "406:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "_desc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "417:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 90,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "433:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "433:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "425:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "425:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 86,
                        "name": "Todo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "401:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Todo_$75_storage_ptr_$",
                          "typeString": "type(struct Note.Todo storage pointer)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "401:44:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Todo_$75_memory",
                        "typeString": "struct Note.Todo memory"
                      }
                    },
                    "src": "382:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Todo_$75_storage",
                      "typeString": "struct Note.Todo storage ref"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "382:63:1"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "_desc",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "321:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "320:21:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:0:1"
            },
            "scope": 98,
            "src": "301:152:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 99,
        "src": "69:387:1"
      }
    ],
    "src": "33:423:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/src/contracts/Note.sol",
      "exportedSymbols": {
        "Note": [
          98
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 58,
        "name": "PragmaDirective",
        "src": "33:32:1"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            98
          ],
          "name": "Note",
          "scope": 99
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "name",
              "scope": 98,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 59,
                "name": "ElementaryTypeName",
                "src": "90:6:1"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "444e4f5445",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"DNOTE\"",
                  "value": "DNOTE"
                },
                "id": 60,
                "name": "Literal",
                "src": "111:7:1"
              }
            ],
            "id": 61,
            "name": "VariableDeclaration",
            "src": "90:28:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "notes",
              "scope": 98,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct Note.Todo)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct Note.Todo)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 62,
                    "name": "ElementaryTypeName",
                    "src": "133:4:1"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Todo",
                      "referencedDeclaration": 75,
                      "type": "struct Note.Todo"
                    },
                    "id": 63,
                    "name": "UserDefinedTypeName",
                    "src": "141:4:1"
                  }
                ],
                "id": 64,
                "name": "Mapping",
                "src": "125:21:1"
              }
            ],
            "id": 65,
            "name": "VariableDeclaration",
            "src": "125:34:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "noteCount",
              "scope": 98,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 66,
                "name": "ElementaryTypeName",
                "src": "166:4:1"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 67,
                "name": "Literal",
                "src": "190:1:1"
              }
            ],
            "id": 68,
            "name": "VariableDeclaration",
            "src": "166:25:1"
          },
          {
            "attributes": {
              "canonicalName": "Note.Todo",
              "name": "Todo",
              "scope": 98,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "id",
                  "scope": 75,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 69,
                    "name": "ElementaryTypeName",
                    "src": "220:4:1"
                  }
                ],
                "id": 70,
                "name": "VariableDeclaration",
                "src": "220:7:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "description",
                  "scope": 75,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 71,
                    "name": "ElementaryTypeName",
                    "src": "238:6:1"
                  }
                ],
                "id": 72,
                "name": "VariableDeclaration",
                "src": "238:18:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "author",
                  "scope": 75,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 73,
                    "name": "ElementaryTypeName",
                    "src": "267:7:1"
                  }
                ],
                "id": 74,
                "name": "VariableDeclaration",
                "src": "267:14:1"
              }
            ],
            "id": 75,
            "name": "StructDefinition",
            "src": "198:91:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createNote",
              "scope": 98,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_desc",
                      "scope": 97,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 76,
                        "name": "ElementaryTypeName",
                        "src": "321:6:1"
                      }
                    ],
                    "id": 77,
                    "name": "VariableDeclaration",
                    "src": "321:19:1"
                  }
                ],
                "id": 78,
                "name": "ParameterList",
                "src": "320:21:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 79,
                "name": "ParameterList",
                "src": "349:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 68,
                              "type": "uint256",
                              "value": "noteCount"
                            },
                            "id": 80,
                            "name": "Identifier",
                            "src": "360:9:1"
                          }
                        ],
                        "id": 81,
                        "name": "UnaryOperation",
                        "src": "360:11:1"
                      }
                    ],
                    "id": 82,
                    "name": "ExpressionStatement",
                    "src": "360:11:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Note.Todo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Note.Todo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 65,
                                  "type": "mapping(uint256 => struct Note.Todo storage ref)",
                                  "value": "notes"
                                },
                                "id": 83,
                                "name": "Identifier",
                                "src": "382:5:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 68,
                                  "type": "uint256",
                                  "value": "noteCount"
                                },
                                "id": 84,
                                "name": "Identifier",
                                "src": "388:9:1"
                              }
                            ],
                            "id": 85,
                            "name": "IndexAccess",
                            "src": "382:16:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct Note.Todo memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 75,
                                  "type": "type(struct Note.Todo storage pointer)",
                                  "value": "Todo"
                                },
                                "id": 86,
                                "name": "Identifier",
                                "src": "401:4:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 68,
                                  "type": "uint256",
                                  "value": "noteCount"
                                },
                                "id": 87,
                                "name": "Identifier",
                                "src": "406:9:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 77,
                                  "type": "string memory",
                                  "value": "_desc"
                                },
                                "id": 88,
                                "name": "Identifier",
                                "src": "417:5:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 89,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "425:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 113,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 90,
                                        "name": "Identifier",
                                        "src": "433:3:1"
                                      }
                                    ],
                                    "id": 91,
                                    "name": "MemberAccess",
                                    "src": "433:10:1"
                                  }
                                ],
                                "id": 92,
                                "name": "FunctionCall",
                                "src": "425:19:1"
                              }
                            ],
                            "id": 93,
                            "name": "FunctionCall",
                            "src": "401:44:1"
                          }
                        ],
                        "id": 94,
                        "name": "Assignment",
                        "src": "382:63:1"
                      }
                    ],
                    "id": 95,
                    "name": "ExpressionStatement",
                    "src": "382:63:1"
                  }
                ],
                "id": 96,
                "name": "Block",
                "src": "349:104:1"
              }
            ],
            "id": 97,
            "name": "FunctionDefinition",
            "src": "301:152:1"
          }
        ],
        "id": 98,
        "name": "ContractDefinition",
        "src": "69:387:1"
      }
    ],
    "id": 99,
    "name": "SourceUnit",
    "src": "33:423:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xFae800E372AB7eCDD1bf9D2b013B6B34f8AD0497",
      "transactionHash": "0xd52ab1db03565554b76ed258d4610d9ffa2d9b87def12207ea30e93dd59dba45"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-11T14:24:12.107Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}